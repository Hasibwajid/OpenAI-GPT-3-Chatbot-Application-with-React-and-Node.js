{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PMLS\\\\Desktop\\\\OpenAI-GPT-3-Chatbot-Application-with-React-and-Node.js\\\\chatbot_reactjs\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chatbot.css';\nimport ChatIcon from '../assets/robot.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hi there! I'm your virtual assistant.\",\n    isUser: false\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleMessageSubmit = async e => {\n    e.preventDefault();\n    if (!inputValue.trim()) return;\n\n    // Add user's message to the chat\n    setMessages(prevMessages => [...prevMessages, {\n      text: inputValue,\n      isUser: true\n    }]);\n    setInputValue('');\n    try {\n      const response = await axios.post(\"http://localhost:9090/chatbot-prompt\", {\n        userPrompt: inputValue\n      });\n\n      // Handle the response from the server\n      const botResponse = response.data.botResponse;\n\n      // Add bot's response to the chat\n      setMessages(prevMessages => [...prevMessages, {\n        text: botResponse,\n        isUser: false\n      }]);\n    } catch (error) {\n      console.error('Error:', error.message);\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"I'm sorry, but I'm currently unable to respond. Please try again later.\",\n        isUser: false,\n        isError: true\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ChatIcon,\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Virtual Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.isUser ? 'message user' : 'message bot',\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleMessageSubmit,\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"hHrER5Q9J5i2HOcz+Zy5UEDpWWQ=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChatIcon","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","text","isUser","inputValue","setInputValue","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleMessageSubmit","e","preventDefault","trim","prevMessages","response","post","userPrompt","botResponse","data","error","console","message","isError","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","ref","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/PMLS/Desktop/OpenAI-GPT-3-Chatbot-Application-with-React-and-Node.js/chatbot_reactjs/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chatbot.css';\r\nimport ChatIcon from '../assets/robot.png';\r\nimport axios from 'axios';\r\nfunction Chatbot() {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Hi there! I'm your virtual assistant.\", isUser: false },\r\n  ]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleMessageSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!inputValue.trim()) return;\r\n  \r\n    // Add user's message to the chat\r\n    setMessages(prevMessages => [...prevMessages, { text: inputValue, isUser: true }]);\r\n    setInputValue('');\r\n  \r\n    try {\r\n      const response = await axios.post(\"http://localhost:9090/chatbot-prompt\", {\r\n        userPrompt: inputValue,\r\n      });\r\n  \r\n      // Handle the response from the server\r\n      const botResponse = response.data.botResponse;\r\n  \r\n      // Add bot's response to the chat\r\n      setMessages(prevMessages => [...prevMessages, { text: botResponse, isUser: false }]);\r\n    } catch (error) {\r\n      console.error('Error:', error.message);\r\n  \r\n      setMessages(prevMessages => [\r\n        ...prevMessages,\r\n        { text: \"I'm sorry, but I'm currently unable to respond. Please try again later.\", isUser: false, isError: true }\r\n      ]);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">\r\n        <div className=\"avatar\">\r\n          <img src={ChatIcon} alt=\"Avatar\" />\r\n        </div>\r\n        <div className=\"title\">Virtual Assistant</div>\r\n      </div>\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={msg.isUser ? 'message user' : 'message bot'}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n      <form onSubmit={handleMessageSubmit} className=\"chatbot-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}